!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	qualified	/Include an extra class-qualified tag entry for each tag/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	access	/Access (or export) of class members/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	inherits	/Inheritance information/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	signature	/Signature of routine (e.g. prototype or parameter list)/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	p,prototype	/function prototypes/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ahmed/cp-library/Templates/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
MAX_N	/home/ahmed/cp-library/Templates/matrixExp.cpp	/^constexpr int MAX_N = 201, MOD = 1e9+7;$/;"	v	typeref:typename:int
MOD	/home/ahmed/cp-library/Templates/matrixExp.cpp	/^constexpr int MAX_N = 201, MOD = 1e9+7;$/;"	v	typeref:typename:int
Matrix	/home/ahmed/cp-library/Templates/matrixExp.cpp	/^struct Matrix { int mat[MAX_N][MAX_N]; }; \/\/ we return a 2D array$/;"	s	file:
Matrix::mat	/home/ahmed/cp-library/Templates/matrixExp.cpp	/^struct Matrix { int mat[MAX_N][MAX_N]; }; \/\/ we return a 2D array$/;"	m	struct:Matrix	typeref:typename:int[][]	file:	access:public
OFF	/home/ahmed/cp-library/Templates/macros.cpp	/^#define OFF(/;"	d	file:	signature:(n,idx)
ON	/home/ahmed/cp-library/Templates/macros.cpp	/^#define ON(/;"	d	file:	signature:(n,idx)
PI	/home/ahmed/cp-library/Templates/macros.cpp	/^const double PI = acos(-1.0);$/;"	v	typeref:typename:const double
angle	/home/ahmed/cp-library/Templates/macros.cpp	/^#define angle(/;"	d	file:	signature:(a)
bitCount	/home/ahmed/cp-library/Templates/macros.cpp	/^#define bitCount(/;"	d	file:	signature:(x)
ceil_i	/home/ahmed/cp-library/Templates/macros.cpp	/^#define ceil_i(/;"	d	file:	signature:(a,b)
clz	/home/ahmed/cp-library/Templates/macros.cpp	/^#define clz(x) (__builtin_clzl/;"	d	file:	signature:(x)
crossProduct	/home/ahmed/cp-library/Templates/macros.cpp	/^#define crossProduct(/;"	d	file:	signature:(a,b)
ctz	/home/ahmed/cp-library/Templates/macros.cpp	/^#define ctz(x) (__builtin_ctzl/;"	d	file:	signature:(x)
dotProduct	/home/ahmed/cp-library/Templates/macros.cpp	/^#define dotProduct(/;"	d	file:	signature:(a,b)
floor_i	/home/ahmed/cp-library/Templates/macros.cpp	/^#define floor_i(/;"	d	file:	signature:(a,b)
getBit	/home/ahmed/cp-library/Templates/macros.cpp	/^#define getBit(/;"	d	file:	signature:(n,k)
gray	/home/ahmed/cp-library/Templates/macros.cpp	/^#define gray(/;"	d	file:	signature:(n)
mat	/home/ahmed/cp-library/Templates/matrixExp.cpp	/^struct Matrix { int mat[MAX_N][MAX_N]; }; \/\/ we return a 2D array$/;"	m	struct:Matrix	typeref:typename:int[][]	file:	access:public
matMul	/home/ahmed/cp-library/Templates/matrixExp.cpp	/^Matrix matMul(Matrix a, Matrix b) { \/\/ normally O(n^3)$/;"	f	typeref:typename:Matrix	signature:(Matrix a,Matrix b)
matMul	/home/ahmed/cp-library/Templates/matrixExp.cpp	/^Matrix matMul(Matrix a, Matrix b, int p, int q, int r) { \/\/ O(pqr)$/;"	f	typeref:typename:Matrix	signature:(Matrix a,Matrix b,int p,int q,int r)
matPow	/home/ahmed/cp-library/Templates/matrixExp.cpp	/^Matrix matPow(Matrix base, int p) { \/\/ normally O(n^3 log p)$/;"	f	typeref:typename:Matrix	signature:(Matrix base,int p)
mod	/home/ahmed/cp-library/Templates/matrixExp.cpp	/^ll mod(ll a, ll m) { return ((a%m)+m) % m; } \/\/ ensure positive answer$/;"	f	typeref:typename:ll	signature:(ll a,ll m)
normalize	/home/ahmed/cp-library/Templates/macros.cpp	/^#define normalize(/;"	d	file:	signature:(a)
reflectO	/home/ahmed/cp-library/Templates/macros.cpp	/^#define reflectO(/;"	d	file:	signature:(v,m)
rotateA	/home/ahmed/cp-library/Templates/macros.cpp	/^#define rotateA(/;"	d	file:	signature:(p,ang,about)
rotateO	/home/ahmed/cp-library/Templates/macros.cpp	/^#define rotateO(/;"	d	file:	signature:(v,ang)
round_i	/home/ahmed/cp-library/Templates/macros.cpp	/^#define round_i(/;"	d	file:	signature:(a,b)
round_m	/home/ahmed/cp-library/Templates/macros.cpp	/^#define round_m(/;"	d	file:	signature:(a,b)
round_multiple	/home/ahmed/cp-library/Templates/macros.cpp	/^#define round_multiple(/;"	d	file:	signature:(n,m)
same	/home/ahmed/cp-library/Templates/macros.cpp	/^#define same(/;"	d	file:	signature:(v1,v2)
toggle	/home/ahmed/cp-library/Templates/macros.cpp	/^#define toggle(/;"	d	file:	signature:(n,idx)
uniq	/home/ahmed/cp-library/Templates/macros.cpp	/^#define uniq(x) x.resize(uniqu/;"	d	file:	signature:(x)
